Я изменил получение данных на словарь который нужно парсить в массив,
в целом все новые контроллеры работают по одному принципу

${link}/api/Articles/AllArticles //Возвращает базовую информацию о всех статьях в виде словаря

${link}/api/Articles/MostPopularArticles //Возвращает базовую информацию о трех самых популярных статьях в виде словаря

${link}/api/Articles/{Name}/SearchArticle //Чет типо поиска, возвращает первые 10 статей в которых есть часть строки

Ниже пример данных и пример того как они парсятся 

{
  "1": { "id": 1, "title": "Article 1", "first_paragraph": "First paragraph of article 1", "theme_id": 2, "views": 150, "publish_date": "2025-03-01" },
  "2": { "id": 2, "title": "Article 2", "first_paragraph": "First paragraph of article 2", "theme_id": 3, "views": 120, "publish_date": "2025-03-02" }
}


const AllArticles = () => {
  useEffect(() => {
    fetch('/AllArticles')
      .then(response => response.json())
      .then(data => {
        if (data.message) {
          console.log(data.message);
        } else {
          // данные в виде словаря (объекта)
          console.log("All Articles (received as a dictionary):", data);
          const articlesArray = Object.values(data);
          console.log("Articles as Array:", articlesArray);
          const firstArticle = articlesArray[0]; // Первая статья
          console.log("First Article:", firstArticle.title); // Получаем заголовок первой статьи
        }
      })
      .catch(error => console.error('Error fetching articles:', error));
  }, []);